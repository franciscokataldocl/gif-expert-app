{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","alt","src","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA0CeA,EAvCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OACE,sBAAMC,UAAU,aAAaC,SAZV,SAACC,GACpBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAG7BT,GAAc,SAACU,GAAD,OAAWR,GAAX,mBAA0BQ,OACxCP,EAAc,MAKhB,SACE,uBACEQ,KAAK,OACLC,MAAOV,EACPW,SAvBoB,SAACP,GAGzBH,EAAcG,EAAEQ,OAAOF,QAqBnBG,YAAY,kB,+BCjCPC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,gDAEiCC,UAAUH,GAF3C,6BACJ,oCADI,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAchBM,GAdgB,4CAAH,sDCkCLO,EA9BM,SAACf,GACnB,MAA0BhB,mBAAS,CAC9BuB,KAAM,GACNS,SAAQ,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OAnBAC,qBAAU,WACTpB,EAAQC,GACPoB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAKc,EACLL,SAAQ,SAGd,CAAChB,IAWGiB,GCdKK,EAdK,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE5B,OACE,sBAAKf,UAAU,8CAAf,UACE,sBAAMA,UAAU,cAAhB,SACE,qBAAKoC,IAAKX,EAAOY,IAAKtB,MAExB,sBAAMf,UAAU,mBAAhB,SACE,6BAAKyB,UCaEa,EAlBC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAEjB,EAAkCe,EAAaf,GAAjCa,EAAd,EAAQN,KAAcS,EAAtB,EAAsBA,QAEtB,OACE,qCACGA,GAAW,mBAAG7B,UAAU,mCAAb,sBACZ,qBAAIA,UAAU,kDAAd,yBAEE,+BAAOa,OAERa,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,WCSfe,EAtBM,WACnB,MAAoC1C,mBAAS,CAAC,YAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAQA,OACE,qCACE,cAAC,EAAD,CAAaA,cAAeA,IAE5B,qBAAKI,UAAU,eAAf,SACGwC,EAAWlB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCXxB4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b6c3a879.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({ setCategories }) => {\n  //estados\n  const [inputValue, setinputValue] = useState(\"\");\n\n  //functions\n\n  const handleInputChange = (e) => {\n    //console.log(e.target.value);\n\n    setinputValue(e.target.value);\n    //console.log(inputValue)\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      //cats es un callback, el nombres puede ser cualquiera\n      //donde le pasamos dos valores, el valor anterior y el nuevo\n      setCategories((cats) => [inputValue, ...cats]);\n      setinputValue(\"\");\n    }\n  };\n\n  return (\n    <form className=\"formulario\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder=\"buscar gif\"\n      />\n    </form>\n  );\n};\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","export const getGifs = async(category)=>{\n    const apiKey = 'NaLulphlQpKOzfp5zxNP0hgrMdvOTEe1';\n    const url =`http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    //console.log(data)\n    const gifs = data.map(img=>{\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    // console.log(gifs);\nreturn gifs;\n    // setImages(gifs);\n    \n}","\nimport { useState, useEffect } from \"react\";\nimport {getGifs} from '../helpers/getGifs';\n\nconst useFetchGifs = (category) => {\n   const [state, setState] = useState({\n        data: [],\n        loading:true\n   });\n\n   //effects\n   useEffect(() => {\n    getGifs(category)\n    .then(imgs=>{\n        setState({\n            data:imgs,\n            loading:false\n        })\n    })\n   }, [category]);\n\n\n\n//    setTimeout(()=>{\n//     setState({\n//         data: [1,2,3,4,5],\n//         loading:false\n//     })\n// }, 3000);\n\n   return state;\n}\n\n\nexport default useFetchGifs\n","import React from \"react\";\n\nconst GifGridItem = ({ title, url }) => {\n  //console.log(id, title, url)\n  return (\n    <div className=\"gifItem animate__animated animate__fadeInUp\">\n      <span className=\"imageCutter\">\n        <img alt={title} src={url} />\n      </span>\n      <span className=\"titleBox animate\">\n        <h4>{title}</h4>\n      </span>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","import React from \"react\";\nimport useFetchGifs from \"../hooks/useFetchGifs\";\n// import { getGifs } from '../helpers/getGifs';\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({ category }) => {\n  // const [images,setImages] = useState([]);\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      {loading && <p className=\"animate__animated animate__pulse\">cargando</p>}\n      <h3 className=\"category-title animate__animated animate__pulse\">\n        has buscado:\n        <span>{category}</span>\n      </h3>\n      {images.map((img) => (\n        <GifGridItem key={img.id} {...img} />\n      ))}\n    </>\n  );\n};\n\nexport default GifGrid;\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"Digimon\"]);\n\n  //funciones\n  // const handleAdd = ()=>{\n  // setCategories((cats) =>[...cats, 'Samurai X']);\n\n  // }\n\n  return (\n    <>\n      <AddCategory setCategories={setCategories} />\n\n      <div className=\"gifContainer\">\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//componentes\nimport GifExpertApp from './GifExpertApp';\n//estilos\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n\n// apikey gif = sWWfLmk7A2JV7Qm2n3WbpKVLug1QDkRD"],"sourceRoot":""}